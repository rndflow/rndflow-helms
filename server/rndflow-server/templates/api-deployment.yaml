apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rndflow-server.fullname" . }}-api
  labels:
    app: {{ include "rndflow-server.fullname" . }}-api
spec:
  selector:
    matchLabels:
      app: {{ include "rndflow-server.fullname" . }}-api
  replicas: {{ .Values.api.replicas }}
  template:
    metadata:
      labels:
        app: {{ include "rndflow-server.fullname" . }}-api
    spec:
      {{ if .Values.config.imagePullSecret }}
      imagePullSecrets:
        - name: "{{ .Values.config.imagePullSecret }}"
      {{ end }}
      {{ if .Values.config.priorityClassName }}
      priorityClassName: "{{ .Values.config.priorityClassName }}"
      {{ end }}
      containers:
        - name: rndflow-api
          image: "{{ .Values.config.registry }}/{{ .Values.api.image }}"
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          command:
            - './boot.sh'
          env:
            - name: PYTHONUNBUFFERED
              value: "yes"
            - name: API_REQUEST_TIMEOUT
              value: '{{ default "600" .Values.api.requestTimeout }}'
            - name: API_WORKERS
              value: '{{ default "4" .Values.api.workers }}'
            {{ if .Values.config.databasePoolSize }}
            - name: DATABASE_POOL_SIZE
              value: "{{ .Values.config.databasePoolSize }}"
            {{ end }}
            {{ if .Values.config.databaseMaxOverflow }}
            - name: DATABASE_MAX_OVERFLOW
              value: "{{ .Values.config.databaseMaxOverflow }}"
            {{ end }}
            {{ if .Values.config.databaseEcho }}
            - name: DATABASE_ECHO
              value: "{{ .Values.config.databaseEcho }}"
            {{ end }}

            {{ if .Values.config.s3Pool }}
            {{ if .Values.config.s3Pool.timeout }}
            - name: S3SERVER_POOL_TIMEOUT
              value: "{{ .Values.config.s3Pool.timeout }}"
            {{ end }}
            {{ if .Values.config.s3Pool.maxsize }}
            - name: S3SERVER_POOL_MAXSIZE
              value: "{{ .Values.config.s3Pool.maxsize }}"
            {{ end }}
            {{ if .Values.config.s3Pool.certReqs }}
            - name: S3SERVER_POOL_CERT_REQS
              value: "{{ .Values.config.s3Pool.certReqs }}"
            {{ end }}

            {{ if .Values.config.s3Pool.retries }}
            {{ if .Values.config.s3Pool.retries.total }}
            - name: S3SERVER_POOL_RETRIES_TOTAL
              value: "{{ .Values.config.s3Pool.retries.total }}"
            {{ end }}
            {{ if .Values.config.s3Pool.retries.backoffFactor }}
            - name: S3SERVER_POOL_RETRIES_BACKOFF_FACTOR
              value: "{{ .Values.config.s3Pool.retries.backoffFactor }}"
            {{ end }}
            {{ end }}

            {{ end }}

            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: databaseUri
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: rabbitmqUri
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: adminEmail
            - name: AUTHJWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: apiSecret
            - name: MAIL_SERVER
              value: {{  required ".Values.email.server is required" .Values.email.server }}
            - name: MAIL_PORT
              value: {{  required ".Values.email.port is required" .Values.email.port | quote }}
            - name: MAIL_TLS
              value: {{  required ".Values.email.tls is required" .Values.email.tls | quote }}
            - name: MAIL_FROM
              value: {{  required ".Values.email.sender is required" .Values.email.sender }}
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: email_username
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: email_password
            {{ if .Values.config.s3cleanup_safe_period }}
            - name: S3SERVER_CLEANUP_SAFE_PERIOD
              value: "{{ .Values.config.s3cleanup_safe_period }}"
            {{ end }}
          lifecycle:
            preStop:
              exec:
                command: ['/bin/bash', '-c', 'kill -SIGTERM $(cat /rndflow/pid)']
          resources:
{{ toYaml .Values.celery.resources | indent 12 }}
          ports:
            - name: http
              containerPort: 8000
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end }}

      {{- if .Values.api.nodeName }}
      nodeName: "{{ .Values.api.nodeName }}"
      {{- end }}
      {{- if .Values.api.affinity }}
      affinity:
        {{- toYaml .Values.api.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.api.nodeSelector | nindent 8 }}
      {{- end }}
