apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rndflow-server.fullname" . }}-celery
  labels:
    app: {{ include "rndflow-server.fullname" . }}-celery
spec:
  selector:
    matchLabels:
      app: {{ include "rndflow-server.fullname" . }}-celery
  replicas: {{ .Values.celery.replicas }}
  template:
    metadata:
      labels:
        app: {{ include "rndflow-server.fullname" . }}-celery
    spec:
      serviceAccountName: {{ include "rndflow-server.fullname" . }}-builder-account
      {{ if .Values.config.imagePullSecret }}
      imagePullSecrets:
        - name: "{{ .Values.config.imagePullSecret }}"
      {{ end }}
      {{ if .Values.config.priorityClassName }}
      priorityClassName: "{{ .Values.config.priorityClassName }}"
      {{ end }}
      containers:
        - name: rndflow-celery
          image: "{{ .Values.config.registry }}/{{ .Values.api.image }}"
          imagePullPolicy: {{.Values.config.imagePullPolicy }}  
          command:
            - './boot-celery.sh'
          env:
            - name: PYTHONUNBUFFERED
              value: "yes"
            - name: CELERY_WORKERS
              value: '{{ default "1" .Values.celery.workers }}'
            - name: CELERY_LOG_LEVEL
              value: '{{ default "INFO" .Values.celery.logLevel }}'
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: databaseUri
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: rabbitmqUri
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: adminEmail
            - name: AUTHJWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: apiSecret

            {{ if .Values.config.databasePoolSize }}
            - name: DATABASE_POOL_SIZE
              value: "{{ .Values.config.databasePoolSize }}"
            {{ end }}
            {{ if .Values.config.databasePoolTimeout }}
            - name: DATABASE_POOL_TIMEOUT
              value: "{{ .Values.config.databasePoolTimeout }}"
            {{ end }}
            {{ if .Values.config.databaseMaxOverflow }}
            - name: DATABASE_MAX_OVERFLOW
              value: "{{ .Values.config.databaseMaxOverflow }}"
            {{ end }}
            {{ if .Values.config.databaseEcho }}
            - name: DATABASE_ECHO
              value: "{{ .Values.config.databaseEcho }}"
            {{ end }}

            {{ if .Values.config.bot }}
            {{ if .Values.config.bot.telegram }}
            {{ if .Values.config.bot.telegram.name }}
            - name: TELEGRAM_BOT_NAME
              value: "{{ .Values.config.bot.telegram.name }}"
            {{ end }}
            {{ if .Values.config.bot.telegram.token }}
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: telegramBotToken
            {{ end }}
            {{ if .Values.config.bot.telegram.timeout }}
            - name: TELEGRAM_BOT_TIMEOUT
              value: "{{ .Values.config.bot.telegram.timeout }}"
            {{ end }}
            {{ if .Values.config.bot.telegram.subscriptionKeyValidity }}
            - name: TELEGRAM_BOT_SUBSCRIPTION_KEY_VALIDITY
              value: "{{ .Values.config.bot.telegram.subscriptionKeyValidity }}"
            {{ end }}
            {{ end }}
            {{ end }}

            {{ if .Values.config.s3 }}
            {{ if .Values.config.s3.pool }}
            {{ if .Values.config.s3.pool.timeout }}
            - name: S3SERVER_POOL_TIMEOUT
              value: "{{ .Values.config.s3.pool.timeout }}"
            {{ end }}
            {{ if .Values.config.s3.pool.maxsize }}
            - name: S3SERVER_POOL_MAXSIZE
              value: "{{ .Values.config.s3.pool.maxsize }}"
            {{ end }}
            {{ if .Values.config.s3.pool.certReqs }}
            - name: S3SERVER_POOL_CERT_REQS
              value: "{{ .Values.config.s3.pool.certReqs }}"
            {{ end }}

            {{ if .Values.config.s3.pool.retries }}
            {{ if .Values.config.s3.pool.retries.total }}
            - name: S3SERVER_POOL_RETRIES_TOTAL
              value: "{{ .Values.config.s3.pool.retries.total }}"
            {{ end }}
            {{ if .Values.config.s3.pool.retries.backoffFactor }}
            - name: S3SERVER_POOL_RETRIES_BACKOFF_FACTOR
              value: "{{ .Values.config.s3.pool.retries.backoffFactor }}"
            {{ end }}
            {{ end }}

            {{ end }}
            {{ end }}

            {{ if .Values.config.options }}
            {{ if  hasKey .Values.config.options "useBulkSave" }}
            - name: OPTIONS_USE_BULK_SAVE
              value: "{{ .Values.config.options.useBulkSave }}"
            {{ end }}
            {{ if  hasKey .Values.config.options "useCelerySave" }}
            - name: OPTIONS_USE_CELERY_SAVE
              value: "{{ .Values.config.options.useCelerySave }}"
            {{ end }}
            {{ end }}

            - name: RNDFLOW_API_SERVER
              value: {{ include "rndflow-server.fullname" . }}-api-svc:8000
            - name: BUILDER_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: BUILDER_JOB_PREFIX
              value: {{ .Values.builder.jobPrefix }}
            - name: BUILDER_INIT_IMAGE
              value: "{{ .Values.config.registry }}/{{ .Values.builder.image }}"
            - name: MAIL_SERVER
              value: {{  required ".Values.email.server is required" .Values.email.server }}
            - name: MAIL_PORT
              value: {{  required ".Values.email.port is required" .Values.email.port | quote }}
            - name: MAIL_TLS
              value: {{  required ".Values.email.tls is required" .Values.email.tls | quote }}
            - name: MAIL_SSL
              value: {{  required ".Values.email.ssl is required" .Values.email.ssl | quote }}
            - name: USE_CREDENTIALS
              value: {{  required ".Values.email.use_credentials is required" .Values.email.use_credentials | quote }}
            - name: MAIL_FROM
              value: {{  required ".Values.email.sender is required" .Values.email.sender }}
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: email_username
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rndflow-server.fullname" . }}-secrets
                  key: email_password
          resources:
{{ toYaml .Values.celery.resources | indent 12 }}

      {{- if .Values.celery.nodeName }}
      nodeName: "{{ .Values.celery.nodeName }}"
      {{- end }}
      {{- if .Values.celery.affinity }}
      affinity:
        {{- toYaml .Values.celery.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.celery.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.celery.nodeSelector | nindent 8 }}
      {{- end }}
